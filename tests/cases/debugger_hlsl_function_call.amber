#!amber
# Copyright 2020 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SET ENGINE_DATA fence_timeout_ms 1000000

VIRTUAL_FILE "compute.hlsl"

[[vk::binding(0)]]
StructuredBuffer<int> data;

int C(int x)
{
  int y = x*x;
  return y;
}

int B(int x)
{
  int y = x + 2;
  return C(y);
}

int A(int x)
{
  int y = B(x + 1);
  int z = B(y);
  return x + y + z;
}

[numthreads(1,1,1)]
void main() {
  data[0] = A(data[0]);
}
END

SHADER compute shader HLSL VIRTUAL_FILE "compute.hlsl"

BUFFER data DATA_TYPE int32 DATA
  10
END

PIPELINE compute pipeline
  ATTACH shader
  SHADER_OPTIMIZATION shader
    --inline-entry-points-exhaustive
    --eliminate-dead-functions
  END
  BIND BUFFER data AS storage DESCRIPTOR_SET 0 BINDING 0
END

DEBUG pipeline 1 1 1
    THREAD GLOBAL_INVOCATION_ID 0 0 0
        EXPECT LOCATION "compute.hlsl" 26  "  data[0] = A(data[0]);"
        STEP_IN
        CONTINUE
    END
END

EXPECT data IDX 0 EQ 29420
